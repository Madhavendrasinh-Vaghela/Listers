{"ast":null,"code":"var _jsxFileName = \"C:\\\\JS\\\\my-list\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.js\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchUser = async () => {\n      if (token) {\n        // Here we would normally verify the token with the backend\n        // For now, we'll just decode it or assume it's valid\n        // A full implementation would make an API call here\n        // For simplicity, we'll skip this for now and add it later.\n        // For now, if a token exists, we'll assume a user is logged in.\n        setUser({\n          token\n        }); // Placeholder user object\n      }\n      setLoading(false);\n    };\n    fetchUser();\n  }, [token]);\n  const login = (newToken, userData) => {\n    localStorage.setItem('token', newToken);\n    setToken(newToken);\n    setUser(userData);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      user,\n      login,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"ydkzPibB/T6umEUkKHiVHOTUnmU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","user","setUser","loading","setLoading","fetchUser","login","newToken","userData","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/JS/my-list/frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\n\nimport React, { createContext, useState, useEffect } from 'react';\n\nexport const AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      if (token) {\n        // Here we would normally verify the token with the backend\n        // For now, we'll just decode it or assume it's valid\n        // A full implementation would make an API call here\n        // For simplicity, we'll skip this for now and add it later.\n        // For now, if a token exists, we'll assume a user is logged in.\n        setUser({ token }); // Placeholder user object\n      }\n      setLoading(false);\n    };\n\n    fetchUser();\n  }, [token]);\n\n  const login = (newToken, userData) => {\n    localStorage.setItem('token', newToken);\n    setToken(newToken);\n    setUser(userData);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ token, user, login, logout, loading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAE9C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACjE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIR,KAAK,EAAE;QACT;QACA;QACA;QACA;QACA;QACAK,OAAO,CAAC;UAAEL;QAAM,CAAC,CAAC,CAAC,CAAC;MACtB;MACAO,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,MAAMS,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IACpCT,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAAC;IACvCT,QAAQ,CAACS,QAAQ,CAAC;IAClBL,OAAO,CAACM,QAAQ,CAAC;EACnB,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;IAChCb,QAAQ,CAAC,IAAI,CAAC;IACdI,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEV,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,KAAK;MAAEI,IAAI;MAAEK,KAAK;MAAEI,MAAM;MAAEP;IAAQ,CAAE;IAAAR,QAAA,EAClEA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACrB,EAAA,CAtCWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}